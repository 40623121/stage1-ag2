<h1>Introduction</h1>
<p>專題題目 : 飛機起降</p>
<p>動機 : 自己蠻喜歡飛機類的東西，小時候常常去小港的餐廳看飛機起降，加上想設計路徑類的模擬，所以決定坐飛機的起降。</p>
<p>第一位組員學號: <a href="https://github.com/40623121/cd2021">40623121 </a></p>
<p>第二位組員學號: 40523252</p>
<p><a href="https://github.com/40623121/stage1-ag2">分組倉儲</a></p>
<p></p>
<h1>Assemble</h1>
<p></p>
<p>這次專題是使用inventor繪製零件圖並組合，參考自F-16的戰鬥機。</p>
<p><img alt="" height="263" src="/images/Plane.jpg" width="450"/></p>
<p>繪製的STL檔 : <a href="/downloads/plane.stl">圖檔</a></p>
<p><img alt="" height="267" src="/images/組合.png" width="447"/></p>
<h1>CoppeliaSim</h1>
<p>預計要讓繪製的飛機做一個起降的動作。</p>
<p><span style="background-color: #ffff00;">設計過程</span></p>
<p><span style="background-color: #ffffff;">1.將組合好的組合圖匯入。</span></p>
<p><span style="background-color: #ffffff;">2.拆解組合起來的飛機。</span></p>
<p><span style="background-color: #ffffff;">3.加入4根joint，將長度設為0.09m，直徑為0.02m。</span></p>
<p><span style="background-color: #ffffff;">4.把旋轉軸與四個輪子結合，並把輪子重新命名為left_motor,right_motor,back_left,back_right。</span></p>
<p><span style="background-color: #ffffff;">5.將機體本身跟輪子設為動態物件並實體化。</span></p>
<p><span style="background-color: #ffffff;">6.把馬達轉速設為100deg/s。</span></p>
<p><span style="background-color: #ffffff;">7.代入程式碼</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init() 
    left_front_handle= sim.getObjectHandle('left_motor')
    left_back_handle= sim.getObjectHandle('left_motor')
    right_back_handle= sim.getObjectHandle('right_motor')
    right_front_handle= sim.getObjectHandle('right_motor')
    MaxVel=2
    leftvelocity=0
    rightvelocity=0
    dVel=0.5;
    --sim.setJointTargetVelocity(left_front_handle,leftvelocity)
    sim.setJointTargetVelocity(left_back_handle,leftvelocity)
    sim.setJointTargetVelocity(right_back_handle,rightvelocity)
    --sim.setJointTargetVelocity(right_front_handle,rightvelocity)
end

function sysCall_actuation() 
    message,auxiliaryData=sim.getSimulatorMessage()
    while message~=-1 do
        if (message==sim.message_keypress) then
            if (auxiliaryData[1]==32) then
                -- right key
                leftvelocity=0
                rightvelocity=0
                sim.setJointForce(left_front_handle, 0)
                sim.setJointForce(left_back_handle, 0)
                sim.setJointForce(right_back_handle, 0)
                sim.setJointForce(right_front_handle, 0)
                break
            else
                --sim.setJointForce(left_front_handle, 10000)
                sim.setJointForce(left_back_handle, 10000)
                sim.setJointForce(right_back_handle, 10000)
                --sim.setJointForce(right_front_handle, 10000)
            end
            if (auxiliaryData[1]==2007) then
                -- up key
                leftvelocity=(leftvelocity+rightvelocity)/2
                rightvelocity=leftvelocity
                leftvelocity=leftvelocity+dVel
                rightvelocity=rightvelocity+dVel
            end
            if (auxiliaryData[1]==2008) then
                -- down key
                leftvelocity=(leftvelocity+rightvelocity)/2
                rightvelocity=leftvelocity
                leftvelocity=leftvelocity-dVel
                rightvelocity=rightvelocity-dVel
            end
            if (auxiliaryData[1]==2009) then
                -- left key
                leftvelocity=leftvelocity-dVel
                rightvelocity=rightvelocity+dVel
            end
            if (auxiliaryData[1]==2010) then
                -- right key
                leftvelocity=leftvelocity+dVel
                rightvelocity=rightvelocity-dVel
            end
        end
        message,auxiliaryData=sim.getSimulatorMessage()
    end
    
    if leftvelocity&gt;MaxVel then
        leftvelocity=MaxVel
    end
    if leftvelocity&lt;-MaxVel then
        leftvelocity=-MaxVel
    end
    
    if rightvelocity&gt;MaxVel then
                rightvelocity=MaxVel
    end
    if rightvelocity&lt;-MaxVel then
                rightvelocity=-MaxVel
    end
    
    --sim.setJointTargetVelocity(left_front_handle,leftvelocity)
    sim.setJointTargetVelocity(left_back_handle,leftvelocity)
    sim.setJointTargetVelocity(right_back_handle,rightvelocity)
    --sim.setJointTargetVelocity(right_front_handle,rightvelocity)
    
end </pre>
<p><span style="background-color: #ffffff;"></span></p>
<p><span style="background-color: #ffffff;"></span></p>
<p></p>
<p><span style="background-color: #ffff00;">作動結果</span></p>
<p><span style="background-color: #ffff00;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/RweU4et9Tw8" width="560"></iframe></span></p>
<p></p>
<p></p>
<h1>Experience</h1>
<h2>Week2</h2>
<p>40623121 : </p>
<p></p>
<p>這週要訂下了專題題目，一開始還沒辦法馬上進入狀況，還在熟悉軟體使用方法，準備開始繪製零件，<span>這禮拜我</span><span>畫了機體、飛彈、輪子等等，因為表面結構複雜細節又很多</span><span>，所以在繪製零件時花太多時間了，但是我還是會努力畫完，</span>在組員互相幫助下，會一起努力完成專題題目的。</p>
<p>遇到的問題: </p>
<p>1.不知道選什麼題目(解決辦法 : 就選自己喜歡的吧)</p>
<p>2.繪製零件時常常出現特徵錯誤或是不如預期(解決辦法 : 熬夜趕圖。)</p>
<p></p>
<p></p>
<h2>Week3</h2>
<p>40623121 : </p>
<p></p>
<p>這週已經繪製好零件了，開始著手在使用coppeliasim了，<span>這週在練習使用軟體，使用下來有大半時間都在對老師給的參考資料進行翻譯、理解，雖然真的花費很多時間，甚至一度想放棄，但還是很努力堅持下來一個一個慢慢去解讀，也開始編排要報告的pdf，然後希望有好心人在下一次分組專題願意收留我。</span></p>
<p><span>遇到的問題:</span></p>
<p><span>1.代入程式碼後模擬時機體並沒有如預期的作動(解決辦法 : 改成做使用鍵盤操控飛機。)</span></p>
<p><span>2.因不熟悉軟體所以會發生模擬時零件亂飛，本體亂動。(解決辦法 : 嘗試將各個零件設為動態物件或非動態物件)</span></p>
<p></p>
<h1>Final Report</h1>
<h2>Youtube</h2>
<p></p>
<p>youtube影片:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/_-JiJvMBtiA" width="560"></iframe></p>
<p></p>
<p></p>
<h2>PDF</h2>
<p><a href="/downloads/2021-協同產品設計實習-stage1-ag2.pdf">pdf</a></p>
<p></p>
<p></p>